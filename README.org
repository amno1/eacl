* eacl - Emacs auto complete lines v2.0.3

[[https://travis-ci.org/redguardtoo/eacl][https://travis-ci.org/redguardtoo/eacl.svg?branch=master]] [[http://melpa.org/#/eacl][file:http://melpa.org/packages/eacl-badge.svg]] [[http://stable.melpa.org/#/eacl][file:http://stable.melpa.org/packages/eacl-badge.svg]]

Auto complete lines by grepping the project.

*Screenshot:*

[[https://raw.githubusercontent.com/redguardtoo/eacl/master/eacl-demo.gif]]

For example, a web developer need create a new component instance.

Suppose the component has been used in current project before:
#+begin_src html
<MyComponent
  attr1="v1"
  attr2="v2"
  attr3="v3"
  attr4="v4"
/>
  <Toolbar>
    <Button onClick={ e => console.log(e) }>
      <i className="fa fa-circle" />
    </Button>
  </Toolbar>
</MyComponent>
#+end_src

The developer only need input =<MyComponent= and run =M-x eacl-complete-multiline=.
* Install
Place =eacl.el= under your [[https://www.emacswiki.org/emacs/LoadPath][Load Path]]. Then add =(require 'eacl)= to your configuration.

It's also possible to use [[http://melpa.org][melpa]].

[[https://github.com/abo-abo/swiper][Ivy]] is required.

=git grep= will be automatically detected for completion if possible. Or else default grep is used.
* Usage
=M-x eacl-complete-line= to complete single line. Line candidates are extracted in project root or N level of parent directory. N is the optional parameter of =eacl-complete-line=.

=M-x eacl-complete-multiline= to complete multiline code or html tag in project

The keyword to grep is the text from line beginning to current cursor.

Whitespace in keyword could match any characters.

Project is *automatically* detected if Git/Mercurial/Subversion is used.

You can override the default root directory by setting =eacl-project-root=,
#+begin_src elisp
(setq eacl-project-root "~/projs/PROJECT_DIR")
#+end_src
* Tips
** Directories and files grep to ignore
Modify =grep-find-ignored-directories= and =grep-find-ignored-files= to setup directories and files grep should ignore:
#+begin_src elisp
(with-eval-after-load 'grep
  (dolist (v '("node_modules"
               "bower_components"
               ".sass_cache"
               ".cache"
               ".npm"))
    (add-to-list 'grep-find-ignored-directories v))
  (dolist (v '("*.min.js"
               "*.bundle.js"
               "*.min.css"
               "*.json"
               "*.log"))
    (add-to-list 'grep-find-ignored-files v)))
#+end_src

Or you can setup above ignore options in [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html][.dir-locals.el]].

Sample of =.dir-locals.el=,
#+begin_src elisp
((nil . ((eval . (progn
                   (dolist (v '("node_modules"
                                "bower_components"
                                ".sass_cache"
                                ".cache"
                                ".npm"))
                     (add-to-list 'grep-find-ignored-directories v))
                   (dolist (v '("*.min.js"
                                "*.bundle.js"
                                "*.min.css"
                                "*.json"
                                "*.log"))
                     (add-to-list 'grep-find-ignored-files v)))))))
#+end_src


=git grep= is automatically used for grepping in git repository.

Please note =git grep= does NOT use =grep-find-ignored-directories= OR =grep-find-ignored-files=. You could set =eacl-git-grep-untracked= to tell
git whether untracked files should be grepped in the repository.
* Bug Report
Check [[https://github.com/redguardtoo/eacl]].
