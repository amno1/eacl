* eacl - Emacs auto complete lines v2.0.1
Auto complete lines by grepping the project.

*Screenshot:*

[[https://raw.githubusercontent.com/redguardtoo/eacl/master/eacl-demo.gif]]

For example, a web developer need create a new component instance.

Suppose the component has been used in current project before:
#+begin_src html
<MyComponent
  attr1="v1"
  attr2="v2"
  attr3="v3"
  attr4="v4"
/>
  <Toolbar>
    <Button onClick={ e => console.log(e) }>
      <i className="fa fa-circle" />
    </Button>
  </Toolbar>
</MyComponent>
#+end_src

The developer only need input =<MyComponent= and run =M-x eacl-complete-multiline=.
* Install
Place =eacl.el= under your [[https://www.emacswiki.org/emacs/LoadPath][Load Path]]. Then add =(require 'eacl)= to your configuration.

[[https://github.com/abo-abo/swiper][Ivy]] is required.

=git grep= will be automatically detected for completion if possible. Or else default grep is used.
* Usage
=M-x eacl-complete-line= to complete single line in project.

=M-x eacl-complete-multiline= to complete multiline code or html tag in project

The keyword to grep is the text from line beginning to current cursor.

Whitespace in keyword could match any characters.

Project is *automatically* detected if Git/Mercurial/Subversion is used.

You can override the default root directory by setting =eacl-project-root=,
#+begin_src elisp
(setq eacl-project-root "~/projs/PROJECT_DIR")
#+end_src
* Tips
** Directories and files grep to ignore
Modify =grep-find-ignored-directories= and =grep-find-ignored-files= to setup directories and files grep should ignore:
#+begin_src elisp
(eval-after-load 'grep
  '(progn
     (dolist (v '("node_modules"
                  "bower_components"
                  ".sass_cache"
                  ".cache"
                  ".npm"))
       (add-to-list 'grep-find-ignored-directories v))
     (dolist (v '("*.min.js"
                  "*.bundle.js"
                  "*.min.css"
                  "*.json"
                  "*.log"))
       (add-to-list 'grep-find-ignored-files v))))
#+end_src

Or you can setup above ignore options in [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Directory-Variables.html][.dir-locals.el]].

Sample of =.dir-locals.el=,
#+begin_src elisp
((nil . ((eval . (progn
                   (dolist (v '("node_modules"
                                "bower_components"
                                ".sass_cache"
                                ".cache"
                                ".npm"))
                     (add-to-list 'grep-find-ignored-directories v))
                   (dolist (v '("*.min.js"
                                "*.bundle.js"
                                "*.min.css"
                                "*.json"
                                "*.log"))
                     (add-to-list 'grep-find-ignored-files v)))))))
#+end_src
* Bug Report
Check [[https://github.com/redguardtoo/eacl]].
